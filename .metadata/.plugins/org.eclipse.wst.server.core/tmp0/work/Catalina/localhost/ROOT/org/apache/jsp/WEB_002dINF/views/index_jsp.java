/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.74
 * Generated at: 2023-06-13 05:33:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1683173207422L));
    _jspx_dependants.put("jar:file:/C:/Users/b17/Documents/chul/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/project3_0614/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ko\">\n");
      out.write("<head>\n");
      out.write("<meta charset=\"utf-8\">\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n");
      out.write("<meta name=\"description\" content=\"\">\n");
      out.write("<meta name=\"author\" content=\"\">\n");
      out.write("	<title>심플비트</title>\n");
      out.write("	<!-- Custom fonts for this template-->\n");
      out.write("	<link href=\"../resources/vendor/fontawesome-free/css/all.min.css\" rel=\"stylesheet\" type=\"text/css\">\n");
      out.write("	<link\n");
      out.write("	    href=\"https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i\"\n");
      out.write("	    rel=\"stylesheet\">\n");
      out.write("    <!-- Custom styles for this template-->\n");
      out.write("    <link href=\"../resources/css/sb-admin-2.min.css\" rel=\"stylesheet\">\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.6.3.js\"></script>\n");
      out.write("    <script src=\"../resources/js/jspdf.min.js\"></script>\n");
      out.write("    <script src=\"../resources/js/html2canvas.js\"></script>\n");
      out.write("    <script type=\"text/javascript\"\n");
      out.write("        src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=b2cb364ccef277f6f382233c812a84a9\"></script>\n");
      out.write("</head>\n");
      out.write("	<script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\n");
      out.write("<script>\n");
      out.write("    $(document).ready(function () {\n");
      out.write("    	setInterval(() => {\n");
      out.write("    		\n");
      out.write("    		$.ajax({\n");
      out.write("    			url:\"/sensor/resultData\",\n");
      out.write("    			type:\"GET\",\n");
      out.write("    			dataType :\"json\",\n");
      out.write("    			success:function(result){\n");
      out.write("    				var d = new Date();	\n");
      out.write("    				var hur = d.getHours();\n");
      out.write("    				var min = d.getMinutes();	\n");
      out.write("    				var sec = d.getSeconds();	\n");
      out.write("    				var time = \"현재 시간 : \" + hur + \"시 \" + min + \"분 \" + sec + \"초\"	\n");
      out.write("    				console.log(result.temp+\",\"+result.humi)\n");
      out.write("    				$(\"#temp_humi\").empty();\n");
      out.write("    				$(\"#temp_humi\").append(\"<i class='fas fa-regular fa-clock' style='color: #22d0d3;'></i>\"+\"&nbsp;<span>\"+time+\"</span>\");\n");
      out.write("  				  $(\"#temp_humi\").append(\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i class='fas fa-light fa-temperature-high' style='color: #db0000;'></i>\"+\"&nbsp;<span>온도 : \"+result.temp+\" ℃</span>\");\n");
      out.write("  				  $(\"#temp_humi\").append(\"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i class='fas fa-duotone fa-cloud' style='--fa-secondary-color: #1d5ecd;'></i>\"+\"&nbsp;<span>습도 : \"+result.humi+\" %</span>\");\n");
      out.write("    			}\n");
      out.write("    		})\n");
      out.write("    	}, 1000);\n");
      out.write("    	$(\"#selectedMonth > option\").each(function(){\n");
      out.write("    		if($(this).val() == \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${selectedMonth}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"){\n");
      out.write("    			$(this).prop(\"selected\",true)\n");
      out.write("    		}\n");
      out.write("		})\n");
      out.write("        var container = $('#map')[0];\n");
      out.write("        var map = new kakao.maps.Map(container, {\n");
      out.write("            center: new kakao.maps.LatLng(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ lat }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(',');
      out.write(' ');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ lng }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("),\n");
      out.write("            level: 3,\n");
      out.write("            draggable: false\n");
      out.write("        });\n");
      out.write("        var marker = new kakao.maps.Marker({\n");
      out.write("            // 지도 중심좌표에 마커를 생성합니다 \n");
      out.write("            position: map.getCenter()\n");
      out.write("        });\n");
      out.write("        marker.setMap(map);\n");
      out.write("        $(\"#chooseDate\").change(function () {\n");
      out.write("            $.ajax({\n");
      out.write("                url: \"/channelAjax?channel=\" + $(\"#nowChannel\").val() + \"&chooseDate=\" + $(\"#chooseDate\").val(),\n");
      out.write("                type: 'GET',\n");
      out.write("                dataType: \"JSON\",\n");
      out.write("                success: function (result) {\n");
      out.write("                    $(\"#avgtilt\").text(result['avgtilt'] + \"º\")\n");
      out.write("                    $(\"#maxmintilt\").text(result['maxtilt'] + \"º\" + \"/\" + result['mintilt'] + \"º\")\n");
      out.write("                    $(\"#tempData\").text(result['tempData'] + \"℃\")\n");
      out.write("                    $(\"#battData\").text(result['battData'] + \"%\")\n");
      out.write("                    function number_format(number, decimals, dec_point, thousands_sep) {\n");
      out.write("                        // *     example: number_format(1234.56, 2, ',', ' ');\n");
      out.write("                        // *     return: '1 234,56'\n");
      out.write("                        number = (number + '').replace(',', '').replace(' ', '');\n");
      out.write("                        var n = !isFinite(+number) ? 0 : +number,\n");
      out.write("                            prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\n");
      out.write("                            sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,\n");
      out.write("                            dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\n");
      out.write("                            s = '',\n");
      out.write("                            toFixedFix = function (n, prec) {\n");
      out.write("                                var k = Math.pow(10, prec);\n");
      out.write("                                return '' + Math.round(n * k) / k;\n");
      out.write("                            };\n");
      out.write("                        // Fix for IE parseFloat(0.55).toFixed(0) = 0;\n");
      out.write("                        s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');\n");
      out.write("                        if (s[0].length > 3) {\n");
      out.write("                            s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\n");
      out.write("                        }\n");
      out.write("                        if ((s[1] || '').length < prec) {\n");
      out.write("                            s[1] = s[1] || '';\n");
      out.write("                            s[1] += new Array(prec - s[1].length + 1).join('0');\n");
      out.write("                        }\n");
      out.write("                        return s.join(dec);\n");
      out.write("                    }\n");
      out.write("                    $(\"#myAreaChart\").remove();\n");
      out.write("                    $(\".chart-area\").append(\"<canvas id='myAreaChart'></canvas>\")\n");
      out.write("                    var ctx = document.getElementById(\"myAreaChart\");\n");
      out.write("                    var myLineChart = new Chart(ctx, {\n");
      out.write("                        type: 'line',\n");
      out.write("                        data: {\n");
      out.write("                            labels: result['channelDate'],\n");
      out.write("                            datasets: [{\n");
      out.write("                                label: \"경사각\",\n");
      out.write("                                lineTension: 0.3,\n");
      out.write("                                backgroundColor: \"rgba(78, 115, 223, 0.05)\",\n");
      out.write("                                borderColor: \"rgba(78, 115, 223, 1)\",\n");
      out.write("                                pointRadius: 3,\n");
      out.write("                                pointBackgroundColor: \"rgba(78, 115, 223, 1)\",\n");
      out.write("                                pointBorderColor: \"rgba(78, 115, 223, 1)\",\n");
      out.write("                                pointHoverRadius: 3,\n");
      out.write("                                pointHoverBackgroundColor: \"rgba(78, 115, 223, 1)\",\n");
      out.write("                                pointHoverBorderColor: \"rgba(78, 115, 223, 1)\",\n");
      out.write("                                pointHitRadius: 10,\n");
      out.write("                                pointBorderWidth: 2,\n");
      out.write("                                data: result['channelData'],\n");
      out.write("                            }],\n");
      out.write("                        },\n");
      out.write("                        options: {\n");
      out.write("                            maintainAspectRatio: false,\n");
      out.write("                            layout: {\n");
      out.write("                                padding: {\n");
      out.write("                                    left: 10,\n");
      out.write("                                    right: 25,\n");
      out.write("                                    top: 25,\n");
      out.write("                                    bottom: 0\n");
      out.write("                                }\n");
      out.write("                            },\n");
      out.write("                            scales: {\n");
      out.write("                                xAxes: [{\n");
      out.write("                                    time: {\n");
      out.write("                                        unit: 'date'\n");
      out.write("                                    },\n");
      out.write("                                    gridLines: {\n");
      out.write("                                        display: false,\n");
      out.write("                                        drawBorder: false\n");
      out.write("                                    },\n");
      out.write("                                    ticks: {\n");
      out.write("                                        maxTicksLimit: 7,\n");
      out.write("                                        callback: function (value, index, values) {\n");
      out.write("                                            return number_format(value) + \" 시\";\n");
      out.write("                                        }\n");
      out.write("                                    }\n");
      out.write("                                }],\n");
      out.write("                                yAxes: [{\n");
      out.write("                                    ticks: {\n");
      out.write("                                        maxTicksLimit: 5,\n");
      out.write("                                        padding: 10,\n");
      out.write("                                        // Include a dollar sign in the ticks\n");
      out.write("                                        callback: function (value, index, values) {\n");
      out.write("                                            return number_format(value) + \" 도\";\n");
      out.write("                                        }\n");
      out.write("                                    },\n");
      out.write("                                    gridLines: {\n");
      out.write("                                        color: \"rgb(234, 236, 244)\",\n");
      out.write("                                        zeroLineColor: \"rgb(234, 236, 244)\",\n");
      out.write("                                        drawBorder: false,\n");
      out.write("                                        borderDash: [2],\n");
      out.write("                                        zeroLineBorderDash: [2]\n");
      out.write("                                    }\n");
      out.write("                                }],\n");
      out.write("                            },\n");
      out.write("                            legend: {\n");
      out.write("                                display: false\n");
      out.write("                            },\n");
      out.write("                            tooltips: {\n");
      out.write("                                backgroundColor: \"rgb(255,255,255)\",\n");
      out.write("                                bodyFontColor: \"#858796\",\n");
      out.write("                                titleMarginBottom: 10,\n");
      out.write("                                titleFontColor: '#6e707e',\n");
      out.write("                                titleFontSize: 14,\n");
      out.write("                                borderColor: '#dddfeb',\n");
      out.write("                                borderWidth: 1,\n");
      out.write("                                xPadding: 15,\n");
      out.write("                                yPadding: 15,\n");
      out.write("                                displayColors: false,\n");
      out.write("                                intersect: false,\n");
      out.write("                                mode: 'index',\n");
      out.write("                                caretPadding: 10,\n");
      out.write("                                callbacks: {\n");
      out.write("                                    label: function (tooltipItem, chart) {\n");
      out.write("                                        var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';\n");
      out.write("                                        return datasetLabel + ': ' + number_format(tooltipItem.yLabel) + \" 도\";\n");
      out.write("                                    }\n");
      out.write("                                }\n");
      out.write("                            }\n");
      out.write("                        }\n");
      out.write("                    });\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        })\n");
      out.write("        $(\"a[data-channel]\").click(function () {\n");
      out.write("            $(\"#channelName\").text(\"채널별 경사각 (\" + $(this).data(\"channel\") + \")\")\n");
      out.write("            $(\"#nowChannel\").val($(this).data(\"channel\"))\n");
      out.write("            $.ajax({\n");
      out.write("                url: \"/channelAjax?channel=\" + $(this).data(\"channel\") + \"&chooseDate=\" + $(\"#chooseDate\").val(),\n");
      out.write("                type: 'GET',\n");
      out.write("                dataType: \"JSON\",\n");
      out.write("                success: function (result) {\n");
      out.write("                    $(\"#avgtilt\").text(result['avgtilt'] + \"º\")\n");
      out.write("                    $(\"#maxmintilt\").text(result['maxtilt'] + \"º\" + \"/\" + result['mintilt'] + \"º\")\n");
      out.write("                    $(\"#tempData\").text(result['tempData'] + \"℃\")\n");
      out.write("                    $(\"#battData\").text(result['battData'] + \"%\")\n");
      out.write("                    $(\"#map\").empty();\n");
      out.write("                    var container = $('#map')[0];\n");
      out.write("                    var map = new kakao.maps.Map(container, {\n");
      out.write("                        center: new kakao.maps.LatLng(result['lat'], result['lng']),\n");
      out.write("                        level: 3,\n");
      out.write("                        draggable: false\n");
      out.write("                    });\n");
      out.write("                    var marker = new kakao.maps.Marker({\n");
      out.write("                        // 지도 중심좌표에 마커를 생성합니다 \n");
      out.write("                        position: map.getCenter()\n");
      out.write("                    });\n");
      out.write("                    marker.setMap(map);\n");
      out.write("                    function number_format(number, decimals, dec_point, thousands_sep) {\n");
      out.write("                        // *     example: number_format(1234.56, 2, ',', ' ');\n");
      out.write("                        // *     return: '1 234,56'\n");
      out.write("                        number = (number + '').replace(',', '').replace(' ', '');\n");
      out.write("                        var n = !isFinite(+number) ? 0 : +number,\n");
      out.write("                            prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\n");
      out.write("                            sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,\n");
      out.write("                            dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\n");
      out.write("                            s = '',\n");
      out.write("                            toFixedFix = function (n, prec) {\n");
      out.write("                                var k = Math.pow(10, prec);\n");
      out.write("                                return '' + Math.round(n * k) / k;\n");
      out.write("                            };\n");
      out.write("                        // Fix for IE parseFloat(0.55).toFixed(0) = 0;\n");
      out.write("                        s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');\n");
      out.write("                        if (s[0].length > 3) {\n");
      out.write("                            s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\n");
      out.write("                        }\n");
      out.write("                        if ((s[1] || '').length < prec) {\n");
      out.write("                            s[1] = s[1] || '';\n");
      out.write("                            s[1] += new Array(prec - s[1].length + 1).join('0');\n");
      out.write("                        }\n");
      out.write("                        return s.join(dec);\n");
      out.write("                    }\n");
      out.write("                    $(\"#myAreaChart\").remove();\n");
      out.write("                    $(\".chart-area\").append(\"<canvas id='myAreaChart'></canvas>\")\n");
      out.write("                    var ctx = document.getElementById(\"myAreaChart\");\n");
      out.write("                    var myLineChart = new Chart(ctx, {\n");
      out.write("                        type: 'line',\n");
      out.write("                        data: {\n");
      out.write("                            labels: result['channelDate'],\n");
      out.write("                            datasets: [{\n");
      out.write("                                label: \"경사각\",\n");
      out.write("                                lineTension: 0.3,\n");
      out.write("                                backgroundColor: \"rgba(78, 115, 223, 0.05)\",\n");
      out.write("                                borderColor: \"rgba(78, 115, 223, 1)\",\n");
      out.write("                                pointRadius: 3,\n");
      out.write("                                pointBackgroundColor: \"rgba(78, 115, 223, 1)\",\n");
      out.write("                                pointBorderColor: \"rgba(78, 115, 223, 1)\",\n");
      out.write("                                pointHoverRadius: 3,\n");
      out.write("                                pointHoverBackgroundColor: \"rgba(78, 115, 223, 1)\",\n");
      out.write("                                pointHoverBorderColor: \"rgba(78, 115, 223, 1)\",\n");
      out.write("                                pointHitRadius: 10,\n");
      out.write("                                pointBorderWidth: 2,\n");
      out.write("                                data: result['channelData'],\n");
      out.write("                            }],\n");
      out.write("                        },\n");
      out.write("                        options: {\n");
      out.write("                            maintainAspectRatio: false,\n");
      out.write("                            layout: {\n");
      out.write("                                padding: {\n");
      out.write("                                    left: 10,\n");
      out.write("                                    right: 25,\n");
      out.write("                                    top: 25,\n");
      out.write("                                    bottom: 0\n");
      out.write("                                }\n");
      out.write("                            },\n");
      out.write("                            scales: {\n");
      out.write("                                xAxes: [{\n");
      out.write("                                    time: {\n");
      out.write("                                        unit: 'date'\n");
      out.write("                                    },\n");
      out.write("                                    gridLines: {\n");
      out.write("                                        display: false,\n");
      out.write("                                        drawBorder: false\n");
      out.write("                                    },\n");
      out.write("                                    ticks: {\n");
      out.write("                                        maxTicksLimit: 7,\n");
      out.write("                                        callback: function (value, index, values) {\n");
      out.write("                                            return number_format(value) + \" 시\";\n");
      out.write("                                        }\n");
      out.write("                                    }\n");
      out.write("                                }],\n");
      out.write("                                yAxes: [{\n");
      out.write("                                    ticks: {\n");
      out.write("                                        maxTicksLimit: 5,\n");
      out.write("                                        padding: 10,\n");
      out.write("                                        // Include a dollar sign in the ticks\n");
      out.write("                                        callback: function (value, index, values) {\n");
      out.write("                                            return number_format(value) + \" 도\";\n");
      out.write("                                        }\n");
      out.write("                                    },\n");
      out.write("                                    gridLines: {\n");
      out.write("                                        color: \"rgb(234, 236, 244)\",\n");
      out.write("                                        zeroLineColor: \"rgb(234, 236, 244)\",\n");
      out.write("                                        drawBorder: false,\n");
      out.write("                                        borderDash: [2],\n");
      out.write("                                        zeroLineBorderDash: [2]\n");
      out.write("                                    }\n");
      out.write("                                }],\n");
      out.write("                            },\n");
      out.write("                            legend: {\n");
      out.write("                                display: false\n");
      out.write("                            },\n");
      out.write("                            tooltips: {\n");
      out.write("                                backgroundColor: \"rgb(255,255,255)\",\n");
      out.write("                                bodyFontColor: \"#858796\",\n");
      out.write("                                titleMarginBottom: 10,\n");
      out.write("                                titleFontColor: '#6e707e',\n");
      out.write("                                titleFontSize: 14,\n");
      out.write("                                borderColor: '#dddfeb',\n");
      out.write("                                borderWidth: 1,\n");
      out.write("                                xPadding: 15,\n");
      out.write("                                yPadding: 15,\n");
      out.write("                                displayColors: false,\n");
      out.write("                                intersect: false,\n");
      out.write("                                mode: 'index',\n");
      out.write("                                caretPadding: 10,\n");
      out.write("                                callbacks: {\n");
      out.write("                                    label: function (tooltipItem, chart) {\n");
      out.write("                                        var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';\n");
      out.write("                                        return datasetLabel + ': ' + number_format(tooltipItem.yLabel) + \" 도\";\n");
      out.write("                                    }\n");
      out.write("                                }\n");
      out.write("                            }\n");
      out.write("                        }\n");
      out.write("                    });\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("        $(\"#report\").click(function () {\n");
      out.write("            if (confirm(\"pdf로 변환 하시겠습니까?\")) {\n");
      out.write("                html2canvas($(\"#pdfDiv\")[0]).then(function (canvas) {\n");
      out.write("                    // 캔버스를 이미지로 변환\n");
      out.write("                    let imgData = canvas.toDataURL('image/png');\n");
      out.write("\n");
      out.write("                    let margin = 10; // 출력 페이지 여백설정\n");
      out.write("                    let imgWidth = 210 - (10 * 2); // 이미지 가로 길이(mm) A4 기준\n");
      out.write("                    let pageHeight = imgWidth * 1.414;  // 출력 페이지 세로 길이 계산 A4 기준\n");
      out.write("                    let imgHeight = canvas.height * imgWidth / canvas.width;\n");
      out.write("                    let heightLeft = imgHeight;\n");
      out.write("\n");
      out.write("                    let doc = new jsPDF('p', 'mm');\n");
      out.write("                    let position = margin;\n");
      out.write("\n");
      out.write("                    // 첫 페이지 출력\n");
      out.write("                    doc.addImage(imgData, 'PNG', margin, position, imgWidth, imgHeight);\n");
      out.write("                    heightLeft -= pageHeight;\n");
      out.write("\n");
      out.write("                    // 한 페이지 이상일 경우 루프 돌면서 출력\n");
      out.write("                    while (heightLeft >= 20) {\n");
      out.write("                        position = heightLeft - imgHeight;\n");
      out.write("                        doc.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\n");
      out.write("                        doc.addPage();\n");
      out.write("                        heightLeft -= pageHeight;\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    // 파일 저장\n");
      out.write("                    doc.save('report.pdf');\n");
      out.write("                });\n");
      out.write("            } else {\n");
      out.write("                alert(\"취소 했습니다.\")\n");
      out.write("            }\n");
      out.write("        })\n");
      out.write("        var addInterval\n");
      out.write("        $(\".kakaoaddr\").click(function (e) {\n");
      out.write("            tilt = $(this).data('tilt');\n");
      out.write("            addInterval = setInterval(() => {\n");
      out.write("                if ($(\"#changeAddress\").val() != 'N') {\n");
      out.write("                    if (confirm(tilt + \" 주소를 '\" + $(\"#changeAddress\").val() + \"'로 변경하시겠습니까?.\")) {\n");
      out.write("                        $.ajax({\n");
      out.write("                            url: \"http://localhost:5500/latlngChange\",\n");
      out.write("                            type: \"post\",\n");
      out.write("                            data: {\n");
      out.write("                                'addr': $(\"#changeAddress\").val(),\n");
      out.write("                                'channel': tilt\n");
      out.write("                            }\n");
      out.write("                        })\n");
      out.write("                        $(\"#changeAddress\").val(\"N\")\n");
      out.write("                        alert(\"새로고침 하면 업데이트 됩니다.\")\n");
      out.write("                    } else {\n");
      out.write("                        clearInterval(addInterval)\n");
      out.write("                        $(\"#changeAddress\").val(\"N\")\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            }, 1000);\n");
      out.write("            new daum.Postcode({\n");
      out.write("                oncomplete: function (data) {\n");
      out.write("                    $(\"#changeAddress\").val(data.address)\n");
      out.write("                }\n");
      out.write("            }).open();\n");
      out.write("        });\n");
      out.write("        $(\"#makeDat\").click(function () {\n");
      out.write("            if (confirm(\"dat 파일을 다운 받으시겠습니까?\")) {\n");
      out.write("                $.ajax({\n");
      out.write("                    url: \"http://localhost:5500/makeDat\",\n");
      out.write("                    type: \"get\"\n");
      out.write("                })\n");
      out.write("                $(\".container-fluid\").append(\"<a href='/test/tiltData.dat' download='Data.dat' id='dataDownload'></a>\")\n");
      out.write("                setTimeout(function () { $(\"#dataDownload\")[0].click() }, 2000);\n");
      out.write("                setTimeout(function () { $(\"#dataDownload\").remove() }, 3000);\n");
      out.write("            } else {\n");
      out.write("                alert(\"취소 했습니다.\")\n");
      out.write("            }\n");
      out.write("        })\n");
      out.write("         $(\"#selectedMonth\").change(function () {\n");
      out.write("        	 console.log($(\"#selectedMonth\").val())\n");
      out.write("            $.ajax({\n");
      out.write("                url: \"/getMonthAjax?selectedMonth=\" + $(\"#selectedMonth\").val(),\n");
      out.write("                type: 'GET',\n");
      out.write("                dataType: \"JSON\",\n");
      out.write("                success: function (result) {\n");
      out.write("        function number_format(number, decimals, dec_point, thousands_sep) {\n");
      out.write("\n");
      out.write("        	  // *     example: number_format(1234.56, 2, ',', ' ');\n");
      out.write("        	  // *     return: '1 234,56'\n");
      out.write("        	  number = (number + '').replace(',', '').replace(' ', '');\n");
      out.write("        	  var n = !isFinite(+number) ? 0 : +number,\n");
      out.write("        	    prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\n");
      out.write("        	    sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,\n");
      out.write("        	    dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\n");
      out.write("        	    s = '',\n");
      out.write("        	    toFixedFix = function(n, prec) {\n");
      out.write("        	      var k = Math.pow(10, prec);\n");
      out.write("        	      return '' + Math.round(n * k) / k;\n");
      out.write("        	    };\n");
      out.write("        	  // Fix for IE parseFloat(0.55).toFixed(0) = 0;\n");
      out.write("        	  s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');\n");
      out.write("        	  if (s[0].length > 3) {\n");
      out.write("        	    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\n");
      out.write("        	  }\n");
      out.write("        	  if ((s[1] || '').length < prec) {\n");
      out.write("        	    s[1] = s[1] || '';\n");
      out.write("        	    s[1] += new Array(prec - s[1].length + 1).join('0');\n");
      out.write("        	  }\n");
      out.write("        	  return s.join(dec);\n");
      out.write("        	}\n");
      out.write("\n");
      out.write("        	// Bar Chart Example\n");
      out.write("        	$(\"#myBarChart\").remove();\n");
      out.write("            $(\".chart-bar\").append(\"<canvas id='myBarChart'></canvas>\")\n");
      out.write("        	var ctx = document.getElementById(\"myBarChart\");\n");
      out.write("            var countDate =[]\n");
      out.write("            var countData =[]\n");
      out.write("            result.forEach(element => {\n");
      out.write("                countDate.push(element['formatted_date'])\n");
      out.write("                countData.push(element['count'])\n");
      out.write("            })\n");
      out.write("            console.log(countDate)\n");
      out.write("            console.log(countData)\n");
      out.write("			const maxValue = Math.max(...countData);\n");
      out.write("        	var myBarChart = new Chart(ctx, {\n");
      out.write("        	  type: 'bar',\n");
      out.write("        	  data: {\n");
      out.write("        	    labels: countDate,\n");
      out.write("        	    datasets: [{\n");
      out.write("        	      label: \"누적\",\n");
      out.write("        	      backgroundColor: \"#4e73df\",\n");
      out.write("        	      hoverBackgroundColor: \"#2e59d9\",\n");
      out.write("        	      borderColor: \"#4e73df\",\n");
      out.write("        	      data: countData,\n");
      out.write("        	    }],\n");
      out.write("        	  },\n");
      out.write("        	  options: {\n");
      out.write("        	    maintainAspectRatio: false,\n");
      out.write("        	    layout: {\n");
      out.write("        	      padding: {\n");
      out.write("        	        left: 10,\n");
      out.write("        	        right: 25,\n");
      out.write("        	        top: 25,\n");
      out.write("        	        bottom: 0\n");
      out.write("        	      }\n");
      out.write("        	    },\n");
      out.write("        	    scales: {\n");
      out.write("        	      xAxes: [{\n");
      out.write("        	        time: {\n");
      out.write("        	          unit: 'date'\n");
      out.write("        	        },\n");
      out.write("        	        gridLines: {\n");
      out.write("        	          display: false,\n");
      out.write("        	          drawBorder: false\n");
      out.write("        	        },\n");
      out.write("        	        ticks: {\n");
      out.write("        	          maxTicksLimit: 6\n");
      out.write("        	        },\n");
      out.write("        	        maxBarThickness: 25,\n");
      out.write("        	      }],\n");
      out.write("        	      \n");
      out.write("        	      yAxes: [{\n");
      out.write("        	        ticks: {\n");
      out.write("        	          min: 0,\n");
      out.write("        	          max: maxValue,\n");
      out.write("        	          maxTicksLimit: 5,\n");
      out.write("        	          padding: 10,\n");
      out.write("        	          // Include a dollar sign in the ticks\n");
      out.write("        	          callback: function(value, index, values) {\n");
      out.write("        	            return number_format(value) + '명';\n");
      out.write("        	          }\n");
      out.write("        	        },\n");
      out.write("        	        gridLines: {\n");
      out.write("        	          color: \"rgb(234, 236, 244)\",\n");
      out.write("        	          zeroLineColor: \"rgb(234, 236, 244)\",\n");
      out.write("        	          drawBorder: false,\n");
      out.write("        	          borderDash: [2],\n");
      out.write("        	          zeroLineBorderDash: [2]\n");
      out.write("        	        }\n");
      out.write("        	      }],\n");
      out.write("        	    },\n");
      out.write("        	    legend: {\n");
      out.write("        	      display: false\n");
      out.write("        	    },\n");
      out.write("        	    tooltips: {\n");
      out.write("        	      titleMarginBottom: 10,\n");
      out.write("        	      titleFontColor: '#6e707e',\n");
      out.write("        	      titleFontSize: 14,\n");
      out.write("        	      backgroundColor: \"rgb(255,255,255)\",\n");
      out.write("        	      bodyFontColor: \"#858796\",\n");
      out.write("        	      borderColor: '#dddfeb',\n");
      out.write("        	      borderWidth: 1,\n");
      out.write("        	      xPadding: 15,\n");
      out.write("        	      yPadding: 15,\n");
      out.write("        	      displayColors: false,\n");
      out.write("        	      caretPadding: 10,\n");
      out.write("        	      callbacks: {\n");
      out.write("        	        label: function(tooltipItem, chart) {\n");
      out.write("        	          var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';\n");
      out.write("        	          return datasetLabel + number_format(tooltipItem.yLabel) + ': 명' ;\n");
      out.write("        	        }\n");
      out.write("        	      }\n");
      out.write("        	    },\n");
      out.write("        	  }\n");
      out.write("                });\n");
      out.write("            }\n");
      out.write("            })\n");
      out.write("        	});\n");
      out.write("    });\n");
      out.write("</script>\n");
      out.write("<body id=\"page-top\">\n");
      out.write("\n");
      out.write("    <!-- Page Wrapper -->\n");
      out.write("    <div id=\"wrapper\">\n");
      out.write("\n");
      out.write("        <!-- Sidebar -->\n");
      out.write("        <ul class=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\n");
      out.write("\n");
      out.write("            <!-- Sidebar - Brand -->\n");
      out.write("            <a class=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"index.jsp\">\n");
      out.write("                <div class=\"sidebar-brand-icon rotate-n-15\">\n");
      out.write("                    <i class=\"fas fa-laugh-wink\"></i>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"sidebar-brand-text mx-3\">SB Admin <sup>2</sup></div>\n");
      out.write("            </a>\n");
      out.write("\n");
      out.write("            <!-- Divider -->\n");
      out.write("            <hr class=\"sidebar-divider my-0\">\n");
      out.write("\n");
      out.write("            <!-- Nav Item - Dashboard -->\n");
      out.write("            <li class=\"nav-item active\">\n");
      out.write("                <a class=\"nav-link\" href=\"index.jsp\">\n");
      out.write("                    <i class=\"fas fa-fw fa-tachometer-alt\"></i>\n");
      out.write("                    <span>Dashboard</span></a>\n");
      out.write("            </li>\n");
      out.write("\n");
      out.write("            <!-- Divider -->\n");
      out.write("            <hr class=\"sidebar-divider\">\n");
      out.write("\n");
      out.write("            <!-- Heading -->\n");
      out.write("            <div class=\"sidebar-heading\">\n");
      out.write("                Interface\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <!-- Nav Item - Pages Collapse Menu -->\n");
      out.write("            <li class=\"nav-item\">\n");
      out.write("                <a class=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseTwo\"\n");
      out.write("                    aria-expanded=\"true\" aria-controls=\"collapseTwo\">\n");
      out.write("                    <i class=\"fas fa-fw fa-cog\"></i>\n");
      out.write("                    <span>Components</span>\n");
      out.write("                </a>\n");
      out.write("                <div id=\"collapseTwo\" class=\"collapse\" aria-labelledby=\"headingTwo\"\n");
      out.write("                    data-parent=\"#accordionSidebar\">\n");
      out.write("                    <div class=\"bg-white py-2 collapse-inner rounded\">\n");
      out.write("                        <h6 class=\"collapse-header\">Custom Components:</h6>\n");
      out.write("                        <a class=\"collapse-item\" href=\"buttons.jsp\">Buttons</a>\n");
      out.write("                        <a class=\"collapse-item\" href=\"cards.jsp\">Cards</a>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </li>\n");
      out.write("\n");
      out.write("            <!-- Nav Item - Utilities Collapse Menu -->\n");
      out.write("            <li class=\"nav-item\">\n");
      out.write("                <a class=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseUtilities\"\n");
      out.write("                    aria-expanded=\"true\" aria-controls=\"collapseUtilities\">\n");
      out.write("                    <i class=\"fas fa-fw fa-wrench\"></i>\n");
      out.write("                    <span>Utilities</span>\n");
      out.write("                </a>\n");
      out.write("                <div id=\"collapseUtilities\" class=\"collapse\" aria-labelledby=\"headingUtilities\"\n");
      out.write("                    data-parent=\"#accordionSidebar\">\n");
      out.write("                    <div class=\"bg-white py-2 collapse-inner rounded\">\n");
      out.write("                        <h6 class=\"collapse-header\">Custom Utilities:</h6>\n");
      out.write("                        <a class=\"collapse-item\" href=\"utilities-color.jsp\">Colors</a>\n");
      out.write("                        <a class=\"collapse-item\" href=\"utilities-border.jsp\">Borders</a>\n");
      out.write("                        <a class=\"collapse-item\" href=\"utilities-animation.jsp\">Animations</a>\n");
      out.write("                        <a class=\"collapse-item\" href=\"utilities-other.jsp\">Other</a>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </li>\n");
      out.write("\n");
      out.write("            <!-- Divider -->\n");
      out.write("            <hr class=\"sidebar-divider\">\n");
      out.write("\n");
      out.write("            <!-- Heading -->\n");
      out.write("            <div class=\"sidebar-heading\">\n");
      out.write("                Addons\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <!-- Nav Item - Pages Collapse Menu -->\n");
      out.write("            <li class=\"nav-item\">\n");
      out.write("                <a class=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapsePages\"\n");
      out.write("                    aria-expanded=\"true\" aria-controls=\"collapsePages\">\n");
      out.write("                    <i class=\"fas fa-fw fa-folder\"></i>\n");
      out.write("                    <span>Pages</span>\n");
      out.write("                </a>\n");
      out.write("                <div id=\"collapsePages\" class=\"collapse\" aria-labelledby=\"headingPages\"\n");
      out.write("                    data-parent=\"#accordionSidebar\">\n");
      out.write("                    <div class=\"bg-white py-2 collapse-inner rounded\">\n");
      out.write("                        <h6 class=\"collapse-header\">Login Screens:</h6>\n");
      out.write("                        <a class=\"collapse-item\" href=\"login.jsp\">Login</a>\n");
      out.write("                        <a class=\"collapse-item\" href=\"register.jsp\">Register</a>\n");
      out.write("                        <a class=\"collapse-item\" href=\"forgot-password.jsp\">Forgot Password</a>\n");
      out.write("                        <div class=\"collapse-divider\"></div>\n");
      out.write("                        <h6 class=\"collapse-header\">Other Pages:</h6>\n");
      out.write("                        <a class=\"collapse-item\" href=\"404.jsp\">404 Page</a>\n");
      out.write("                        <a class=\"collapse-item\" href=\"blank.jsp\">Blank Page</a>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </li>\n");
      out.write("\n");
      out.write("            <!-- Nav Item - Charts -->\n");
      out.write("            <li class=\"nav-item\">\n");
      out.write("                <a class=\"nav-link\" href=\"charts.jsp\">\n");
      out.write("                    <i class=\"fas fa-fw fa-chart-area\"></i>\n");
      out.write("                    <span>Charts</span></a>\n");
      out.write("            </li>\n");
      out.write("\n");
      out.write("            <!-- Nav Item - Tables -->\n");
      out.write("            <li class=\"nav-item\">\n");
      out.write("                <a class=\"nav-link\" href=\"tables.jsp\">\n");
      out.write("                    <i class=\"fas fa-fw fa-table\"></i>\n");
      out.write("                    <span>Tables</span></a>\n");
      out.write("            </li>\n");
      out.write("\n");
      out.write("            <!-- Divider -->\n");
      out.write("            <hr class=\"sidebar-divider d-none d-md-block\">\n");
      out.write("\n");
      out.write("            <!-- Sidebar Toggler (Sidebar) -->\n");
      out.write("            <div class=\"text-center d-none d-md-inline\">\n");
      out.write("                <button class=\"rounded-circle border-0\" id=\"sidebarToggle\"></button>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <!-- Sidebar Message -->\n");
      out.write("            <div class=\"sidebar-card d-none d-lg-flex\">\n");
      out.write("                <img class=\"sidebar-card-illustration mb-2\" src=\"../resources/img/undraw_rocket.svg\" alt=\"...\">\n");
      out.write("                <p class=\"text-center mb-2\"><strong>SB Admin Pro</strong> is packed with premium features,\n");
      out.write("                    components, and more!</p>\n");
      out.write("                <a class=\"btn btn-success btn-sm\" href=\"https://startbootstrap.com/theme/sb-admin-pro\">Upgrade\n");
      out.write("                    to Pro!</a>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("        </ul>\n");
      out.write("        <!-- End of Sidebar -->\n");
      out.write("\n");
      out.write("        <!-- Content Wrapper -->\n");
      out.write("        <div id=\"content-wrapper\" class=\"d-flex flex-column\">\n");
      out.write("\n");
      out.write("            <!-- Main Content -->\n");
      out.write("            <div id=\"content\">\n");
      out.write("\n");
      out.write("                <!-- Topbar -->\n");
      out.write("                <nav class=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n");
      out.write("\n");
      out.write("                    <!-- Sidebar Toggle (Topbar) -->\n");
      out.write("                    <button id=\"sidebarToggleTop\" class=\"btn btn-link d-md-none rounded-circle mr-3\">\n");
      out.write("                        <i class=\"fa fa-bars\"></i>\n");
      out.write("                    </button>\n");
      out.write("\n");
      out.write("                    <!-- Topbar Search -->\n");
      out.write("                    <form\n");
      out.write("                        class=\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\">\n");
      out.write("                        <div class=\"input-group-append\" id=\"temp_humi\" style=\"white-space: nowrap;\">\n");
      out.write("                        \n");
      out.write("                        </div>\n");
      out.write("                    </form> \n");
      out.write("\n");
      out.write("                    <!-- Topbar Navbar -->\n");
      out.write("                    <ul class=\"navbar-nav ml-auto\">\n");
      out.write("\n");
      out.write("                        <!-- Nav Item - Search Dropdown (Visible Only XS) -->\n");
      out.write("                        <li class=\"nav-item dropdown no-arrow d-sm-none\">\n");
      out.write("                            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"searchDropdown\" role=\"button\"\n");
      out.write("                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n");
      out.write("                                <i class=\"fas fa-search fa-fw\"></i>\n");
      out.write("                            </a>\n");
      out.write("                            <!-- Dropdown - Messages -->\n");
      out.write("                            <div class=\"dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in\"\n");
      out.write("                                aria-labelledby=\"searchDropdown\">\n");
      out.write("                                <form class=\"form-inline mr-auto w-100 navbar-search\">\n");
      out.write("                                    <div class=\"input-group\">\n");
      out.write("                                        <input type=\"text\" class=\"form-control bg-light border-0 small\"\n");
      out.write("                                            placeholder=\"Search for...\" aria-label=\"Search\"\n");
      out.write("                                            aria-describedby=\"basic-addon2\">\n");
      out.write("                                        <div class=\"input-group-append\">\n");
      out.write("                                            <button class=\"btn btn-primary\" type=\"button\">\n");
      out.write("                                                <i class=\"fas fa-search fa-sm\"></i>\n");
      out.write("                                            </button>\n");
      out.write("                                        </div>\n");
      out.write("                                    </div>\n");
      out.write("                                </form>\n");
      out.write("                            </div>\n");
      out.write("                        </li>\n");
      out.write("\n");
      out.write("                        <!-- Nav Item - Alerts -->\n");
      out.write("                        <li class=\"nav-item dropdown no-arrow mx-1\">\n");
      out.write("                            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"alertsDropdown\" role=\"button\"\n");
      out.write("                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n");
      out.write("                                <i class=\"fas fa-bell fa-fw\"></i>\n");
      out.write("                                <!-- Counter - Alerts -->\n");
      out.write("                                <span class=\"badge badge-danger badge-counter\">3+</span>\n");
      out.write("                            </a>\n");
      out.write("                            <!-- Dropdown - Alerts -->\n");
      out.write("                            <div class=\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\"\n");
      out.write("                                aria-labelledby=\"alertsDropdown\">\n");
      out.write("                                <h6 class=\"dropdown-header\">\n");
      out.write("                                    Alerts Center\n");
      out.write("                                </h6>\n");
      out.write("                                <a class=\"dropdown-item d-flex align-items-center\" href=\"#\">\n");
      out.write("                                    <div class=\"mr-3\">\n");
      out.write("                                        <div class=\"icon-circle bg-primary\">\n");
      out.write("                                            <i class=\"fas fa-file-alt text-white\"></i>\n");
      out.write("                                        </div>\n");
      out.write("                                    </div>\n");
      out.write("                                    <div>\n");
      out.write("                                        <div class=\"small text-gray-500\">December 12, 2019</div>\n");
      out.write("                                        <span class=\"font-weight-bold\">A new monthly report is ready to\n");
      out.write("                                            download!</span>\n");
      out.write("                                    </div>\n");
      out.write("                                </a>\n");
      out.write("                                <a class=\"dropdown-item d-flex align-items-center\" href=\"#\">\n");
      out.write("                                    <div class=\"mr-3\">\n");
      out.write("                                        <div class=\"icon-circle bg-success\">\n");
      out.write("                                            <i class=\"fas fa-donate text-white\"></i>\n");
      out.write("                                        </div>\n");
      out.write("                                    </div>\n");
      out.write("                                    <div>\n");
      out.write("                                        <div class=\"small text-gray-500\">December 7, 2019</div>\n");
      out.write("                                        $290.29 has been deposited into your account!\n");
      out.write("                                    </div>\n");
      out.write("                                </a>\n");
      out.write("                                <a class=\"dropdown-item d-flex align-items-center\" href=\"#\">\n");
      out.write("                                    <div class=\"mr-3\">\n");
      out.write("                                        <div class=\"icon-circle bg-warning\">\n");
      out.write("                                            <i class=\"fas fa-exclamation-triangle text-white\"></i>\n");
      out.write("                                        </div>\n");
      out.write("                                    </div>\n");
      out.write("                                    <div>\n");
      out.write("                                        <div class=\"small text-gray-500\">December 2, 2019</div>\n");
      out.write("                                        Spending Alert: We've noticed unusually high spending for your account.\n");
      out.write("                                    </div>\n");
      out.write("                                </a>\n");
      out.write("                                <a class=\"dropdown-item text-center small text-gray-500\" href=\"#\">Show All\n");
      out.write("                                    Alerts</a>\n");
      out.write("                            </div>\n");
      out.write("                        </li>\n");
      out.write("\n");
      out.write("                        <!-- Nav Item - Messages -->\n");
      out.write("                        <li class=\"nav-item dropdown no-arrow mx-1\">\n");
      out.write("                            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"messagesDropdown\" role=\"button\"\n");
      out.write("                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n");
      out.write("                                <i class=\"fas fa-envelope fa-fw\"></i>\n");
      out.write("                                <!-- Counter - Messages -->\n");
      out.write("                                <span class=\"badge badge-danger badge-counter\">7</span>\n");
      out.write("                            </a>\n");
      out.write("                            <!-- Dropdown - Messages -->\n");
      out.write("                            <div class=\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\"\n");
      out.write("                                aria-labelledby=\"messagesDropdown\">\n");
      out.write("                                <h6 class=\"dropdown-header\">\n");
      out.write("                                    Message Center\n");
      out.write("                                </h6>\n");
      out.write("                                <a class=\"dropdown-item d-flex align-items-center\" href=\"#\">\n");
      out.write("                                    <div class=\"dropdown-list-image mr-3\">\n");
      out.write("                                        <img class=\"rounded-circle\" src=\"../resources/img/undraw_profile_1.svg\"\n");
      out.write("                                            alt=\"...\">\n");
      out.write("                                        <div class=\"status-indicator bg-success\"></div>\n");
      out.write("                                    </div>\n");
      out.write("                                    <div class=\"font-weight-bold\">\n");
      out.write("                                        <div class=\"text-truncate\">Hi there! I am wondering if you can help me\n");
      out.write("                                            with a\n");
      out.write("                                            problem I've been having.</div>\n");
      out.write("                                        <div class=\"small text-gray-500\">Emily Fowler Â· 58m</div>\n");
      out.write("                                    </div>\n");
      out.write("                                </a>\n");
      out.write("                                <a class=\"dropdown-item d-flex align-items-center\" href=\"#\">\n");
      out.write("                                    <div class=\"dropdown-list-image mr-3\">\n");
      out.write("                                        <img class=\"rounded-circle\" src=\"../resources/img/undraw_profile_2.svg\"\n");
      out.write("                                            alt=\"...\">\n");
      out.write("                                        <div class=\"status-indicator\"></div>\n");
      out.write("                                    </div>\n");
      out.write("                                    <div>\n");
      out.write("                                        <div class=\"text-truncate\">I have the photos that you ordered last\n");
      out.write("                                            month, how\n");
      out.write("                                            would you like them sent to you?</div>\n");
      out.write("                                        <div class=\"small text-gray-500\">Jae Chun Â· 1d</div>\n");
      out.write("                                    </div>\n");
      out.write("                                </a>\n");
      out.write("                                <a class=\"dropdown-item d-flex align-items-center\" href=\"#\">\n");
      out.write("                                    <div class=\"dropdown-list-image mr-3\">\n");
      out.write("                                        <img class=\"rounded-circle\" src=\"../resources/img/undraw_profile_3.svg\"\n");
      out.write("                                            alt=\"...\">\n");
      out.write("                                        <div class=\"status-indicator bg-warning\"></div>\n");
      out.write("                                    </div>\n");
      out.write("                                    <div>\n");
      out.write("                                        <div class=\"text-truncate\">Last month's report looks great, I am very\n");
      out.write("                                            happy with\n");
      out.write("                                            the progress so far, keep up the good work!</div>\n");
      out.write("                                        <div class=\"small text-gray-500\">Morgan Alvarez Â· 2d</div>\n");
      out.write("                                    </div>\n");
      out.write("                                </a>\n");
      out.write("                                <a class=\"dropdown-item d-flex align-items-center\" href=\"#\">\n");
      out.write("                                    <div class=\"dropdown-list-image mr-3\">\n");
      out.write("                                        <img class=\"rounded-circle\"\n");
      out.write("                                            src=\"https://source.unsplash.com/Mv9hjnEUHR4/60x60\" alt=\"...\">\n");
      out.write("                                        <div class=\"status-indicator bg-success\"></div>\n");
      out.write("                                    </div>\n");
      out.write("                                    <div>\n");
      out.write("                                        <div class=\"text-truncate\">Am I a good boy? The reason I ask is because\n");
      out.write("                                            someone\n");
      out.write("                                            told me that people say this to all dogs, even if they aren't\n");
      out.write("                                            good...</div>\n");
      out.write("                                        <div class=\"small text-gray-500\">Chicken the Dog Â· 2w</div>\n");
      out.write("                                    </div>\n");
      out.write("                                </a>\n");
      out.write("                                <a class=\"dropdown-item text-center small text-gray-500\" href=\"#\">Read More\n");
      out.write("                                    Messages</a>\n");
      out.write("                            </div>\n");
      out.write("                        </li>\n");
      out.write("\n");
      out.write("                        <div class=\"topbar-divider d-none d-sm-block\"></div>\n");
      out.write("\n");
      out.write("                        <!-- Nav Item - User Information -->\n");
      out.write("                        <li class=\"nav-item dropdown no-arrow\">\n");
      out.write("                            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"userDropdown\" role=\"button\"\n");
      out.write("                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n");
      out.write("                                <span\n");
      out.write("                                    class=\"mr-2 d-none d-lg-inline text-gray-600 small\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\n");
      out.write("                                <img class=\"img-profile rounded-circle\"\n");
      out.write("                                    src=\"../resources/img/undraw_profile.svg\">\n");
      out.write("                            </a>\n");
      out.write("                            <!-- Dropdown - User Information -->\n");
      out.write("                            <div class=\"dropdown-menu dropdown-menu-right shadow animated--grow-in\"\n");
      out.write("                                aria-labelledby=\"userDropdown\">\n");
      out.write("                                <a class=\"dropdown-item\" href=\"#\">\n");
      out.write("                                    <i class=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\"></i>\n");
      out.write("                                    Profile\n");
      out.write("                                </a>\n");
      out.write("                                <a class=\"dropdown-item\" href=\"#\">\n");
      out.write("                                    <i class=\"fas fa-cogs fa-sm fa-fw mr-2 text-gray-400\"></i>\n");
      out.write("                                    Settings\n");
      out.write("                                </a>\n");
      out.write("                                <a class=\"dropdown-item\" href=\"#\">\n");
      out.write("                                    <i class=\"fas fa-list fa-sm fa-fw mr-2 text-gray-400\"></i>\n");
      out.write("                                    Activity Log\n");
      out.write("                                </a>\n");
      out.write("                                <div class=\"dropdown-divider\"></div>\n");
      out.write("                                <a class=\"dropdown-item\" href=\"/logout\" data-toggle=\"modal\"\n");
      out.write("                                    data-target=\"#logoutModal\">\n");
      out.write("                                    <i class=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"></i>\n");
      out.write("                                    Logout\n");
      out.write("                                </a>\n");
      out.write("                            </div>\n");
      out.write("                        </li>\n");
      out.write("\n");
      out.write("                    </ul>\n");
      out.write("\n");
      out.write("                </nav>\n");
      out.write("                <!-- End of Topbar -->\n");
      out.write("\n");
      out.write("                <!-- Begin Page Content -->\n");
      out.write("                <div id=\"pdfDiv\">\n");
      out.write("                    <div class=\"container-fluid\">\n");
      out.write("\n");
      out.write("                        <!-- Page Heading -->\n");
      out.write("                        <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n");
      out.write("                            <h1 class=\"h3 mb-0 text-gray-800\">데이터 모니터링</h1>\n");
      out.write("                            <a style=\"cursor:pointer; margin-left:auto;\" id='makeDat'\n");
      out.write("                                class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\"><i\n");
      out.write("                                    class=\"fas fa-download fa-sm text-white-50\"></i> DAT 생성</a>\n");
      out.write("                            <div>&nbsp;&nbsp;</div>\n");
      out.write("                            <a style=\"cursor:pointer;\" id='report'\n");
      out.write("                                class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\"><i\n");
      out.write("                                    class=\"fas fa-download fa-sm text-white-50\"></i> Report 생성</a>\n");
      out.write("\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                        <!-- Content Row -->\n");
      out.write("                        <div class=\"row\">\n");
      out.write("\n");
      out.write("                            <!-- Earnings (Monthly) Card Example -->\n");
      out.write("                            <div class=\"col-xl-3 col-md-6 mb-4\">\n");
      out.write("                                <div class=\"card border-left-primary shadow h-100 py-2\">\n");
      out.write("                                    <div class=\"card-body\">\n");
      out.write("                                        <div class=\"row no-gutters align-items-center\">\n");
      out.write("                                            <div class=\"col mr-2\">\n");
      out.write("                                                <div\n");
      out.write("                                                    class=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\n");
      out.write("                                                    일일 평균 경사각</div>\n");
      out.write("                                                <div class=\"h5 mb-0 font-weight-bold text-gray-800\"\n");
      out.write("                                                    id=\"avgtilt\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${avgtilt}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("º</div>\n");
      out.write("                                            </div>\n");
      out.write("                                            <div class=\"col-auto\">\n");
      out.write("                                                <i class=\"fas fa-calendar fa-2x text-gray-300\"></i>\n");
      out.write("                                            </div>\n");
      out.write("                                        </div>\n");
      out.write("                                    </div>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("\n");
      out.write("                            <!-- Earnings (Monthly) Card Example -->\n");
      out.write("                            <div class=\"col-xl-3 col-md-6 mb-4\">\n");
      out.write("                                <div class=\"card border-left-success shadow h-100 py-2\">\n");
      out.write("                                    <div class=\"card-body\">\n");
      out.write("                                        <div class=\"row no-gutters align-items-center\">\n");
      out.write("                                            <div class=\"col mr-2\">\n");
      out.write("                                                <div\n");
      out.write("                                                    class=\"text-xs font-weight-bold text-success text-uppercase mb-1\">\n");
      out.write("                                                    일일 최고 / 최저 경사각</div>\n");
      out.write("                                                <div class=\"h5 mb-0 font-weight-bold text-gray-800\"\n");
      out.write("                                                    id=\"maxmintilt\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${maxtilt}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("º / ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${mintilt}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("º</div>\n");
      out.write("                                            </div>\n");
      out.write("                                            <div class=\"col-auto\">\n");
      out.write("                                                <i class=\"fas fa-calendar fa-2x text-gray-300\"></i>\n");
      out.write("                                            </div>\n");
      out.write("                                        </div>\n");
      out.write("                                    </div>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("\n");
      out.write("                            <!-- Earnings (Monthly) Card Example -->\n");
      out.write("                            <div class=\"col-xl-3 col-md-6 mb-4\">\n");
      out.write("                                <div class=\"card border-left-info shadow h-100 py-2\">\n");
      out.write("                                    <div class=\"card-body\">\n");
      out.write("                                        <div class=\"row no-gutters align-items-center\">\n");
      out.write("                                            <div class=\"col mr-2\">\n");
      out.write("                                                <div\n");
      out.write("                                                    class=\"text-xs font-weight-bold text-info text-uppercase mb-1\">\n");
      out.write("                                                    일일 평균 기온\n");
      out.write("                                                </div>\n");
      out.write("                                                <div class=\"row no-gutters align-items-center\">\n");
      out.write("                                                    <div class=\"col-auto\">\n");
      out.write("                                                        <div class=\"h5 mb-0 mr-3 font-weight-bold text-gray-800\"\n");
      out.write("                                                            id=\"tempData\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${tempData}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("℃\n");
      out.write("                                                        </div>\n");
      out.write("                                                    </div>\n");
      out.write("                                                    <div class=\"col\">\n");
      out.write("                                                    </div>\n");
      out.write("                                                </div>\n");
      out.write("                                            </div>\n");
      out.write("                                            <div class=\"col-auto\">\n");
      out.write("                                                <i\n");
      out.write("                                                    class=\"fas fa-thermometer-three-quarters fa-2x text-gray-300\"></i>\n");
      out.write("                                            </div>\n");
      out.write("                                        </div>\n");
      out.write("                                    </div>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("\n");
      out.write("                            <!-- Pending Requests Card Example -->\n");
      out.write("                            <div class=\"col-xl-3 col-md-6 mb-4\">\n");
      out.write("                                <div class=\"card border-left-warning shadow h-100 py-2\">\n");
      out.write("                                    <div class=\"card-body\">\n");
      out.write("                                        <div class=\"row no-gutters align-items-center\">\n");
      out.write("                                            <div class=\"col mr-2\">\n");
      out.write("                                                <div\n");
      out.write("                                                    class=\"text-xs font-weight-bold text-warning text-uppercase mb-1\">\n");
      out.write("                                                    일일 평균 배터리</div>\n");
      out.write("                                                <div class=\"h5 mb-0 font-weight-bold text-gray-800\"\n");
      out.write("                                                    id=\"battData\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${battData}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("%</div>\n");
      out.write("                                            </div>\n");
      out.write("                                            <div class=\"col-auto\">\n");
      out.write("                                                <i class=\"fas fa-battery-quarter	 fa-2x text-gray-300\"></i>\n");
      out.write("                                            </div>\n");
      out.write("                                        </div>\n");
      out.write("                                    </div>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                        <!-- Content Row -->\n");
      out.write("\n");
      out.write("                        <div class=\"row\">\n");
      out.write("\n");
      out.write("                            <!-- Area Chart -->\n");
      out.write("                            <div class=\"col-xl-8 col-lg-7\">\n");
      out.write("                                <div class=\"card shadow mb-4\">\n");
      out.write("                                    <!-- Card Header - Dropdown -->\n");
      out.write("                                    <div\n");
      out.write("                                        class=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n");
      out.write("                                        <h6 class=\"m-0 font-weight-bold text-primary\" id=\"channelName\">채널별 경사각\n");
      out.write("                                            (");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${channel}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(")</h6>\n");
      out.write("                                        <div class=\"dropdown no-arrow\" style=\"white-space: nowrap;\">\n");
      out.write("                                            <span class=\"m-0 font-weight-bold text-primary\">날짜 선택</span>\n");
      out.write("                                            <input type=\"date\" id=\"chooseDate\"\n");
      out.write("                                                class=\"m-0 font-weight-bold text-primary\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${minDate }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n");
      out.write("\n");
      out.write("                                            <span class=\"m-0 font-weight-bold text-primary\">채널 선택</span>\n");
      out.write("                                            <a class=\"dropdown-toggle\" href=\"#\" role=\"button\"\n");
      out.write("                                                id=\"dropdownMenuLink\" data-toggle=\"dropdown\"\n");
      out.write("                                                aria-haspopup=\"true\" aria-expanded=\"false\">\n");
      out.write("                                                <i class=\"fas fa-ellipsis-v fa-sm fa-fw text-gray-400\"></i>\n");
      out.write("                                            </a>\n");
      out.write("                                            <div class=\"dropdown-menu dropdown-menu-right shadow animated--fade-in\"\n");
      out.write("                                                aria-labelledby=\"dropdownMenuLink\">\n");
      out.write("                                                <div class=\"dropdown-header\">채널 선택</div>\n");
      out.write("                                                <input type=\"hidden\" id=\"nowChannel\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${channel}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n");
      out.write("                                                ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("                                                <div class=\"dropdown-divider\"></div>\n");
      out.write("                                            </div>\n");
      out.write("                                        </div>\n");
      out.write("                                    </div>\n");
      out.write("                                    <!-- Card Body -->\n");
      out.write("                                    <div class=\"card-body\">\n");
      out.write("                                        <div class=\"chart-area\">\n");
      out.write("                                            <canvas id=\"myAreaChart\"></canvas>\n");
      out.write("                                        </div>\n");
      out.write("                                    </div>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("\n");
      out.write("                            <!-- Pie Chart -->\n");
      out.write("                            <div class=\"col-xl-4 col-lg-5\">\n");
      out.write("                                <div class=\"card shadow mb-4\">\n");
      out.write("                                    <!-- Card Header - Dropdown -->\n");
      out.write("                                    <div\n");
      out.write("                                        class=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n");
      out.write("                                        <h6 class=\"m-0 font-weight-bold text-primary\">채널 위치 지도</h6>\n");
      out.write("                                        <div class=\"dropdown no-arrow\">\n");
      out.write("                                            <a class=\"dropdown-toggle\" href=\"#\" role=\"button\"\n");
      out.write("                                                id=\"dropdownMenuLink\" data-toggle=\"dropdown\"\n");
      out.write("                                                aria-haspopup=\"true\" aria-expanded=\"false\">\n");
      out.write("                                                <i class=\"fas fa-ellipsis-v fa-sm fa-fw text-gray-400\"></i>\n");
      out.write("                                            </a>\n");
      out.write("                                            <div class=\"dropdown-menu dropdown-menu-right shadow animated--fade-in\"\n");
      out.write("                                                aria-labelledby=\"dropdownMenuLink\">\n");
      out.write("                                                <div class=\"dropdown-header\">Dropdown Header:</div>\n");
      out.write("                                                <a class=\"dropdown-item\" href=\"#\">Action</a>\n");
      out.write("                                                <a class=\"dropdown-item\" href=\"#\">Another action</a>\n");
      out.write("                                                <div class=\"dropdown-divider\"></div>\n");
      out.write("                                                <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n");
      out.write("                                            </div>\n");
      out.write("                                        </div>\n");
      out.write("                                    </div>\n");
      out.write("                                    <!-- Card Body -->\n");
      out.write("                                    <div class=\"card-body\">\n");
      out.write("                                        <!-- <div class=\"chart-pie pt-4 pb-2\"> -->\n");
      out.write("                                        <div id=\"map\" class=\"chart-pie pt-4 pb-2\"></div>\n");
      out.write("\n");
      out.write("                                        <!-- </div> -->\n");
      out.write("\n");
      out.write("                                    </div>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                        <!-- Content Row -->\n");
      out.write("                        <div class=\"row\">\n");
      out.write("\n");
      out.write("                            <!-- Content Column -->\n");
      out.write("                            <div class=\"col-lg-6 mb-4\">\n");
      out.write("\n");
      out.write("                                <!-- Color System -->\n");
      out.write("                                <div class=\"row\">\n");
      out.write("                                    ");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("\n");
      out.write("                                </div>\n");
      out.write("\n");
      out.write("                            </div>\n");
      out.write("\n");
      out.write("                            <div class=\"col-lg-6 mb-4\">\n");
      out.write("							    <!-- Illustrations -->\n");
      out.write("							    <div class=\"card shadow mb-4\">\n");
      out.write("							        <div class=\"card-header py-3\">\n");
      out.write("							            <div style=\"display: flex; align-items: center;\">\n");
      out.write("							                <select class=\"form-control\" id=\"selectedMonth\" style=\"width: 80px; height: 40px; margin-left: 10px;\">\n");
      out.write("							                      <option value=\"1\">1월</option>\n");
      out.write("							                      <option value=\"2\">2월</option>\n");
      out.write("							                      <option value=\"3\">3월</option>\n");
      out.write("							                      <option value=\"4\">4월</option>\n");
      out.write("							                      <option value=\"5\">5월</option>\n");
      out.write("							                      <option value=\"6\">6월</option>\n");
      out.write("							                      <option value=\"7\">7월</option>\n");
      out.write("							                      <option value=\"8\">8월</option>\n");
      out.write("							                      <option value=\"9\">9월</option>\n");
      out.write("							                      <option value=\"10\">10월</option>\n");
      out.write("							                      <option value=\"11\">11월</option>\n");
      out.write("							                      <option value=\"12\">12월</option>\n");
      out.write("							                </select>\n");
      out.write("							                <span class=\"m-0 font-weight-bold text-primary\" style=\"margin-left: 10px;\">　일일 접속자 수</span>\n");
      out.write("							            </div>\n");
      out.write("							        </div>\n");
      out.write("							        <div class=\"chart-bar\">\n");
      out.write("							            <canvas id=\"myBarChart\" width=\"790\" height=\"400\" style=\"display: block; height: 320px; width: 632px;\" class=\"chartjs-render-monitor\"></canvas>\n");
      out.write("							        </div>\n");
      out.write("							    </div>\n");
      out.write("							</div>\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                <!-- /.container-fluid -->\n");
      out.write("\n");
      out.write("            </div>\n");
      out.write("            <!-- End of Main Content -->\n");
      out.write("\n");
      out.write("            <!-- Footer -->\n");
      out.write("            <footer class=\"sticky-footer bg-white\">\n");
      out.write("                <div class=\"container my-auto\">\n");
      out.write("                    <div class=\"copyright text-center my-auto\">\n");
      out.write("                        <span>Copyright &copy; SimpleBit 2023</span>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </footer>\n");
      out.write("            <!-- End of Footer -->\n");
      out.write("\n");
      out.write("        </div>\n");
      out.write("        <!-- End of Content Wrapper -->\n");
      out.write("\n");
      out.write("    </div>\n");
      out.write("    <!-- End of Page Wrapper -->\n");
      out.write("\n");
      out.write("    <!-- Scroll to Top Button-->\n");
      out.write("    <a class=\"scroll-to-top rounded\" href=\"#page-top\">\n");
      out.write("        <i class=\"fas fa-angle-up\"></i>\n");
      out.write("    </a>\n");
      out.write("\n");
      out.write("    <!-- Logout Modal-->\n");
      out.write("    <div class=\"modal fade\" id=\"logoutModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n");
      out.write("        aria-hidden=\"true\">\n");
      out.write("        <div class=\"modal-dialog\" role=\"document\">\n");
      out.write("            <div class=\"modal-content\">\n");
      out.write("                <div class=\"modal-header\">\n");
      out.write("                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">Ready to Leave?</h5>\n");
      out.write("                    <button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\n");
      out.write("                        <span aria-hidden=\"true\">X</span>\n");
      out.write("                    </button>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"modal-body\">Select \"Logout\" below if you are ready to end your current session.\n");
      out.write("                </div>\n");
      out.write("                <div class=\"modal-footer\">\n");
      out.write("                    <button class=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">Cancel</button>\n");
      out.write("                    <a class=\"btn btn-primary\" href=\"/logout\">Logout</a>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("    ");
      if (_jspx_meth_c_005fforEach_005f2(_jspx_page_context))
        return;
      out.write("\n");
      out.write("    ");
      if (_jspx_meth_c_005fforEach_005f3(_jspx_page_context))
        return;
      out.write("\n");
      out.write("    ");
      if (_jspx_meth_c_005fforEach_005f4(_jspx_page_context))
        return;
      out.write("\n");
      out.write("    \n");
      out.write("    <!-- Bootstrap core JavaScript-->\n");
      out.write("    <script src=\"../resources/vendor/jquery/jquery.min.js\"></script>\n");
      out.write("    <script src=\"../resources/vendor/bootstrap/js/bootstrap.bundle.min.js\"></script>\n");
      out.write("\n");
      out.write("    <!-- Core plugin JavaScript-->\n");
      out.write("    <script src=\"../resources/vendor/jquery-easing/jquery.easing.min.js\"></script>\n");
      out.write("\n");
      out.write("    <!-- Custom scripts for all pages-->\n");
      out.write("    <script src=\"../resources/js/sb-admin-2.min.js\"></script>\n");
      out.write("\n");
      out.write("    <!-- Page level plugins -->\n");
      out.write("    <script src=\"../resources/vendor/chart.js/Chart.min.js\"></script>\n");
      out.write("    <!-- Page level custom scripts -->\n");
      out.write("\n");
      out.write("\n");
      out.write("    <script src=\"../resources/js/demo/chart-area-demo.js\"></script>\n");
      out.write("    <script src=\"../resources/js/demo/chart-pie-demo.js\"></script>\n");
      out.write("    <script src=\"../resources/js/demo/chart-bar-demo.js\"></script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/index.jsp(1030,48) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("channel");
      // /WEB-INF/views/index.jsp(1030,48) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/index.jsp(1030,48) '${channelList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${channelList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("                                                    <a class=\"dropdown-item\" data-channel=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${channel}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"\n");
            out.write("                                                        style=\"cursor:pointer;\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${channel}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</a>\n");
            out.write("                                                ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent(null);
      // /WEB-INF/views/index.jsp(1090,36) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("LatLng");
      // /WEB-INF/views/index.jsp(1090,36) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/index.jsp(1090,36) '${LatLngList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${LatLngList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("                                        <div class=\"col-lg-6 mb-4\">\n");
            out.write("                                            <div class=\"card bg-primary text-white shadow\">\n");
            out.write("                                                <div class=\"card-body\">\n");
            out.write("                                                    <p id='LatLngTilt'>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${LatLng.tilt}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</p>\n");
            out.write("                                                    <div class=\"text-white-50 small\">\n");
            out.write("                                                        위도 : <p id=\"Lat\"> ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${LatLng.lat}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</p>\n");
            out.write("                                                        경도 : <p id=\"Lat\"> ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${LatLng.lng}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</p>\n");
            out.write("                                                    </div>\n");
            out.write("                                                    <a class=\"kakaoaddr\" data-tilt=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${LatLng.tilt}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"><span\n");
            out.write("                                                            class='btn btn-success btn-icon-split'>채널 주소 변경\n");
            out.write("                                                            하기</span></a>\n");
            out.write("                                                    <input type=\"hidden\" id=\"changeAddress\" value=\"N\" />\n");
            out.write("                                                </div>\n");
            out.write("                                            </div>\n");
            out.write("                                        </div>\n");
            out.write("                                    ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f2 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f2_reused = false;
    try {
      _jspx_th_c_005fforEach_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f2.setParent(null);
      // /WEB-INF/views/index.jsp(1188,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setVar("data");
      // /WEB-INF/views/index.jsp(1188,4) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/index.jsp(1188,4) '${channelData }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${channelData }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f2 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f2 = _jspx_th_c_005fforEach_005f2.doStartTag();
        if (_jspx_eval_c_005fforEach_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("        <input type=\"hidden\" class=\"channelData\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${data }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" />\n");
            out.write("    ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f2.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f2[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f2.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f2.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f2);
      _jspx_th_c_005fforEach_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f3 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f3_reused = false;
    try {
      _jspx_th_c_005fforEach_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f3.setParent(null);
      // /WEB-INF/views/index.jsp(1191,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f3.setVar("date");
      // /WEB-INF/views/index.jsp(1191,4) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f3.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/index.jsp(1191,4) '${channelDate }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${channelDate }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f3 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f3 = _jspx_th_c_005fforEach_005f3.doStartTag();
        if (_jspx_eval_c_005fforEach_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("        <input type=\"hidden\" class=\"channelDate\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${date }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" />\n");
            out.write("    ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f3.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f3[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f3.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f3.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f3);
      _jspx_th_c_005fforEach_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f4 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f4_reused = false;
    try {
      _jspx_th_c_005fforEach_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f4.setParent(null);
      // /WEB-INF/views/index.jsp(1194,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f4.setVar("count");
      // /WEB-INF/views/index.jsp(1194,4) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f4.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/index.jsp(1194,4) '${countData}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${countData}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/index.jsp(1194,4) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f4.setVarStatus("status");
      int[] _jspx_push_body_count_c_005fforEach_005f4 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f4 = _jspx_th_c_005fforEach_005f4.doStartTag();
        if (_jspx_eval_c_005fforEach_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("    	<input type=\"hidden\" class=\"countData\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${count['count']}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" />\n");
            out.write("    	<input type=\"hidden\" class=\"countDate\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${count['formatted_date']}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" />\n");
            out.write("	");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f4.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f4[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f4.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f4.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f4);
      _jspx_th_c_005fforEach_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f4, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f4_reused);
    }
    return false;
  }
}
